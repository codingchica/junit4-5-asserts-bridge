# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

# When to perform the build action.
on:
  push:
    # When changes are made to the key branches
    branches: [ "main" ]
  pull_request:
    # When a pull request targets a key branch
    branches: [ "main" ]

# What will be done as part of this action.
jobs:
  build:

    # Default version - Linux servers.  Shouldn't matter for this project.
    runs-on: ubuntu-latest

    steps:
    # Checkout the code from the source code repository.
    - uses: actions/checkout@v4
    
    # Setup the desired Java version in the environment with a Maven local 
    # cache of dependencies (better build performance)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    # Perform the Maven build and site generation locally.  No artifacts are deployed
    - name: Build with Maven
      run: mvn -B site package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
